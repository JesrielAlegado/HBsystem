package floatedPage;

import config.connectdb;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.LineBorder;

/**
 *
 * @author User
 */
public class EditGuest extends javax.swing.JPanel {
private int guestId = -1; // track which guest is being edited

    public EditGuest() {
        initComponents();
    }

    // Call this method to load data for the guest to be edited
    public void loadGuestData(int id) {
        this.guestId = id;  // Save guest ID
    
    String sql = "SELECT full_name, email, contact_number, address FROM guest WHERE id = ?";
    try {
        connectdb dbc = new connectdb();
        java.sql.Connection conn = dbc.getConnection();
        java.sql.PreparedStatement pst = conn.prepareStatement(sql);
        pst.setInt(1, id);
        java.sql.ResultSet rs = pst.executeQuery();
        
        if (rs.next()) {
            FullName.setText(rs.getString("full_name"));
            Email.setText(rs.getString("email"));
            Contact.setText(rs.getString("contact_number"));
            Address.setText(rs.getString("address"));
        } else {
            JOptionPane.showMessageDialog(null, "Guest not found with ID: " + id);
        }
        
        rs.close();
        pst.close();
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Address = new javax.swing.JTextField();
        Contact = new javax.swing.JTextField();
        FullName = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Submit = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Address.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(Address, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 170, 30));

        Contact.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(Contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 170, 30));

        FullName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(FullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 170, 30));

        Email.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 170, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Edit Guest");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Address");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Full name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Email");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Contact");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        Submit.setText("Submit");
        Submit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SubmitMouseClicked(evt);
            }
        });
        add(Submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 60, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SubmitMouseClicked
    String fullName = FullName.getText().trim();
        String email = Email.getText().trim();
        String contact = Contact.getText().trim();
        String address = Address.getText().trim();

        StringBuilder errorMsg = new StringBuilder();
        boolean hasError = false;

        // Reset borders (for clean UI)
        FullName.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        Email.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        Contact.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        Address.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));

        // Validate Full Name
        if (fullName.isEmpty()) {
            errorMsg.append("- Full Name cannot be empty.\n");
            FullName.setBorder(new LineBorder(Color.RED, 1));
            hasError = true;
        }

        // Validate Email
        if (email.isEmpty()) {
            errorMsg.append("- Email cannot be empty.\n");
            Email.setBorder(new LineBorder(Color.RED, 1));
            hasError = true;
        } else {
            String emailRegex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
            if (!email.matches(emailRegex)) {
                errorMsg.append("- Invalid email format.\n");
                Email.setBorder(new LineBorder(Color.RED, 1));
                hasError = true;
            }
        }

        // Validate Contact
        if (contact.isEmpty()) {
            errorMsg.append("- Contact number cannot be empty.\n");
            Contact.setBorder(new LineBorder(Color.RED, 1));
            hasError = true;
        } else if (!contact.matches("\\d{7,15}")) {
            errorMsg.append("- Contact number must be 7 to 15 digits.\n");
            Contact.setBorder(new LineBorder(Color.RED, 1));
            hasError = true;
        }

        // Validate Address
        if (address.isEmpty()) {
            errorMsg.append("- Address cannot be empty.\n");
            Address.setBorder(new LineBorder(Color.RED, 1));
            hasError = true;
        }

        if (hasError) {
            JOptionPane.showMessageDialog(null, errorMsg.toString(), "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (guestId == -1) {
        JOptionPane.showMessageDialog(null, "No guest selected for editing.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

        String sql = "UPDATE guest SET full_name = ?, email = ?, contact_number = ?, address = ? WHERE id = ?";

        try {
            connectdb dbc = new connectdb();
            java.sql.Connection conn = dbc.getConnection();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, fullName);
            pst.setString(2, email);
            pst.setString(3, contact);
            pst.setString(4, address);
            pst.setInt(5, guestId);

            int rowsUpdated = pst.executeUpdate();

            if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(null, "Guest updated successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Failed to update guest.");
        }
        
        pst.close();
        conn.close();
        
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_SubmitMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Address;
    public javax.swing.JTextField Contact;
    public javax.swing.JTextField Email;
    public javax.swing.JTextField FullName;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
